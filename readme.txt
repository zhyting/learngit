https://mp.weixin.qq.com/s/GgamzHPyZuSg45LoJKsofA
1> 连接时设置为非阻塞，注册可写事件已经设置响应的回调
2> 可写就绪，回调connected，解注册可写事件,发送数据，同时注册可读事件
3> 可读就绪，接受数据，数据接收完成之后，注销可读事件

此处异步的理解:
    不是通过轮询的方式，而是通过IO多路复用的方式来通知你事件就绪，然后回调相应的接口

event_loop + callback  存在的几个问题:
    1> 执行回调函数时发生异常
    2> 回调中嵌套回调，嵌套多层，可读性差
    3> 嵌套中的某一层异常
    4> 数据需要在每一层回调中都处理

写同步代码时
do_a()
do_b()
do_b() 依赖于do_a()的结果,先执行do_a() 然后执行do_b ,但是如果do_a是通过异步调用(事件回调方式)那么，
do_a(do_b())
[因为你不知道什么时候调用do_a，所以只能将do_b 作为参数传递给do_a,以便在调用do_a 时候调用do_b]